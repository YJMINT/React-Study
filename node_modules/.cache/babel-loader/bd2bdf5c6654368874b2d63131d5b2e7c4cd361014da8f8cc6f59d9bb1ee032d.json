{"ast":null,"code":"var _jsxFileName = \"/Users/jeong-yunju/Project/React/Udemy/01-starting-setup/src/components/Expense/Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport './Expenses.css';\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState('2020');\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n  const filteredExpenses = props.item.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear; //선택한 연도와 같은 경우 true 아닐경우 false 반환\n  });\n\n  let expenseContext = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expense found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 27\n  }, this);\n  if (filteredExpenses.length > 0) {\n    expenseContext = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      //목록의 아이템을 매핑할 때는 반드시 key가 있어야 한다.\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), expenseContext]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Expenses, \"d6AxVjxjRbYO2YFEia8LjUybrDc=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpenseFilter","jsxDEV","_jsxDEV","Expenses","props","_s","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","item","filter","expense","date","getFullYear","toString","expenseContext","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","title","amount","id","className","selected","onChangeFilter","_c","$RefreshReg$"],"sources":["/Users/jeong-yunju/Project/React/Udemy/01-starting-setup/src/components/Expense/Expenses.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport './Expenses.css';\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"./ExpenseFilter\";\n\nconst Expenses = (props) =>  {\n    const [filteredYear, setFilteredYear] = useState('2020');\n    const filterChangeHandler = selectedYear => {\n        setFilteredYear(selectedYear);\n    }\n\n    const filteredExpenses = props.item.filter(expense => {\n        return expense.date.getFullYear().toString() === filteredYear; //선택한 연도와 같은 경우 true 아닐경우 false 반환\n    });\n\n    let expenseContext =  <p>No expense found.</p>;\n\n    if (filteredExpenses. length > 0) {\n        expenseContext = filteredExpenses.map((expense) => (\n            <ExpenseItem\n            key = {expense.id} //목록의 아이템을 매핑할 때는 반드시 key가 있어야 한다.\n            title = {expense.title}\n            amount = {expense.amount}\n            date = {expense.date}\n            />));\n    }\n\n    return (\n    <div>\n        <Card className=\"expenses\">\n            <ExpenseFilter selected={filteredYear} onChangeFilter={filterChangeHandler}/>\n            {expenseContext}\n        </Card>\n    </div>\n    )\n}\n\nexport default Expenses;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,gBAAgB;AACvB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,QAAQ,GAAIC,KAAK,IAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;EACxD,MAAMW,mBAAmB,GAAGC,YAAY,IAAI;IACxCF,eAAe,CAACE,YAAY,CAAC;EACjC,CAAC;EAED,MAAMC,gBAAgB,GAAGN,KAAK,CAACO,IAAI,CAACC,MAAM,CAACC,OAAO,IAAI;IAClD,OAAOA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKV,YAAY,CAAC,CAAC;EACnE,CAAC,CAAC;;EAEF,IAAIW,cAAc,gBAAIf,OAAA;IAAAgB,QAAA,EAAG;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE9C,IAAIZ,gBAAgB,CAAEa,MAAM,GAAG,CAAC,EAAE;IAC9BN,cAAc,GAAGP,gBAAgB,CAACc,GAAG,CAAEX,OAAO,iBAC1CX,OAAA,CAACJ,WAAW;MACO;MACnB2B,KAAK,EAAIZ,OAAO,CAACY,KAAM;MACvBC,MAAM,EAAIb,OAAO,CAACa,MAAO;MACzBZ,IAAI,EAAID,OAAO,CAACC;IAAK,GAHdD,OAAO,CAACc,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIhB,CAAE,CAAC;EACZ;EAEA,oBACApB,OAAA;IAAAgB,QAAA,eACIhB,OAAA,CAACH,IAAI;MAAC6B,SAAS,EAAC,UAAU;MAAAV,QAAA,gBACtBhB,OAAA,CAACF,aAAa;QAAC6B,QAAQ,EAAEvB,YAAa;QAACwB,cAAc,EAAEtB;MAAoB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EAC5EL,cAAc;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAAjB,EAAA,CA9BKF,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAgCd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}